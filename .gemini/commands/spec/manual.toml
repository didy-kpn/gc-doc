description = "Generate user manual diff for a specific feature after spec creation."
prompt = """
# Task: Generate User Manual Diff for '{{args}}'

You are an expert technical writer. Your goal is to create a user-facing documentation diff for the specification **{{args}}** that can be applied to the user manual.

---
### PHASE 1: VALIDATION
---
**Your Goal:** Ensure the specification has been initialized.

**Actions:**
1.  **Check State:** Read the metadata file at `docs/specs/{{args}}/progress.json`.
2.  **Verify Phase:** Confirm that the `"phase"` is `"initialized"`. If not, inform the user to run `/doc:create {{args}} "<description>"` first and stop.

---
### PHASE 2: USER DOCUMENTATION DIFF GENERATION
---
**Prerequisite:** Specification is initialized.

**Actions:**
1.  **Load Context:**
    - Read the `progress.json` file at `docs/specs/{{args}}/progress.json` and extract the value of the `description` key.
    - Read the existing user manual at `docs/steering/user-manual.md` to understand current content structure.
    - Perform a high-level analysis of the feature to understand user-facing aspects.

2.  **Evaluate User-Facing Impact:**
    - Determine if this feature has user-visible components (CLI commands, UI elements, API endpoints, configuration options).
    - If the feature is purely internal (internal refactoring, backend optimization, etc.) with no user-facing changes, skip diff generation.

3.  **Generate User Documentation Diff (if applicable):**
    - Based on the feature description from `progress.json`, create user-facing documentation content.
    - Focus on aspects that end-users need to know: installation steps, usage instructions, configuration options, examples, troubleshooting.
    - Format the content as a diff that can be applied to the existing user manual.
    - Include sections like:
      - Overview/Description of the new feature
      - Installation/Setup requirements (if any)
      - Usage examples with command-line syntax or UI steps
      - Configuration options
      - Common use cases
      - Troubleshooting tips

4.  **Save or Skip:**
    - **If user-facing:** Save the generated diff content to `docs/specs/{{args}}/manual.diff` using the `write_file` tool.
    - **If not user-facing:** Skip file creation and proceed to state update.

5.  **Update State:** Use the `replace` tool to update `docs/specs/{{args}}/progress.json`.
    - Change phase from `"initialized"` to `"manual-generated"` or `"manual-skipped"`.
    - Add field `"user_doc_diff_generated": true` if diff created, `false` if skipped.

6.  **Request Next Step:**
    - **If diff created:** Present the generated diff to the user and inform them: "User documentation diff has been generated at `docs/specs/{{args}}/manual.diff`. Review the content, then proceed to requirements generation with `/doc:requirements {{args}}`."
    - **If skipped:** Inform them: "This feature has no user-facing changes, so no user manual diff was created. Proceed to requirements generation with `/doc:requirements {{args}}`."
"""