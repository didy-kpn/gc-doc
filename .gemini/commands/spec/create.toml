description = "Initialize a new spec and create progress.json."
prompt = """
# Task: Specification Initialization

You are an expert AI assistant for document-driven development.

**The user's raw command is appended below your instructions.**
The command format is `/doc:create <feature-name> "<feature-description>"`.
Your task is to parse the `<feature-name>` and `<feature-description>` from the user's input. The `<feature-name>` should be a single word (e.g., 'new-auth-flow').

---
### PHASE 1: INITIALIZATION
---
**Your Goal:** Create the directory structure and the `progress.json` metadata file.

**Actions:**
1.  **Create Directory:** Create the directory `docs/specs/<feature-name>/` if it does not exist. You can use `run_shell_command` with `mkdir -p`.
2.  **Create progress.json:** Create a metadata file at `docs/specs/<feature-name>/progress.json` using the `write_file` tool. This file is CRITICAL for tracking the specification's progress. Use the following content, replacing `<feature-name>` and `<feature-description>` with the parsed values:
    ```json
    {
      "feature_name": "<feature-name>",
      "description": "<feature-description>",
      "created_at": "{{timestamp}}",
      "phase": "initialized",
      "approvals": {
        "manual": { "generated": false, "approved": false },
        "requirements": { "generated": false, "approved": false },
        "design": { "generated": false, "approved": false },
        "tasks": { "generated": false, "approved": false }
      },
      "tasks": {}
    }
    ```
3.  **Conclude:** Inform the user that the specification for `<feature-name>` has been initialized and that the next step is to generate user manual documentation. Ask the user to run `/doc:manual <feature-name>`.
"""