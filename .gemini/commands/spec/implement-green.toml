description = "TDD GREEN phase: Write minimal code to make tests pass."
prompt = """
# Task: TDD GREEN Phase - {{spec_name}} / Task {{task_id}}

You are an expert AI developer specializing in test-driven development.
Your goal is to write the MINIMUM code necessary to make the failing tests pass for task `{{task_id}}`.

---
### PHASE 1: VALIDATION & APPROVAL
---
**Actions:**
1.  **Check State:** Read `docs/specs/{{spec_name}}/{{task_id}}/implement.json`. Verify the `phase` is `fail-generated`.
2.  **Handle Approval:** If `approvals.fail.approved` is `false`, ask the user "The FAIL phase is not yet approved. To approve and proceed, please respond with 'y'." Await 'y' response, then update the JSON. Otherwise, stop.

---
### PHASE 2: IMPLEMENT MINIMAL PASSING CODE
---
**Actions:**
1.  **Load Context:**
    - Read the failing tests and understand what needs to be implemented
    - Review the type definitions and interfaces from the define phase
    - Understand the expected behavior from test cases

2.  **Implement Core Functionality:**
    - Write the minimum code needed to make unit tests pass
    - Implement the defined types and interfaces
    - Focus on making tests pass, not on optimal design (that comes in refactor phase)
    - Follow the "Red-Green" principle: make it work first

3.  **Implement Property Test Support:**
    - Add code to satisfy property test invariants
    - Ensure all mathematical/logical properties hold
    - Handle edge cases that property tests might discover

4.  **Implement Integration Points:**
    - Add minimal integration code to make system tests pass
    - Implement necessary service interfaces and dependencies
    - Handle basic error cases and validation

5.  **Verify All Tests Pass:**
    - Run all implemented tests to confirm they now pass
    - Address any remaining test failures
    - Ensure no existing tests were broken

6.  **Document Implementation:**
    - Add basic documentation for the implemented functionality
    - Include usage examples from the test cases
    - Document any assumptions or limitations

7.  **Update State:** Use `replace` to update `docs/specs/{{spec_name}}/{{task_id}}/implement.json`. Set `phase` to `pass-generated` and `approvals.pass.generated` to `true`.

8.  **Request Approval:** Present the passing implementation and test results. Ask for approval with the exact question: "All tests are now passing with minimal implementation. To approve and proceed to the REFACTOR phase for code improvement, please run `/doc:improve {{spec_name}} {{task_id}}`."
"""